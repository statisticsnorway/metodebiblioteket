[
  {
    "objectID": "catalog.html",
    "href": "catalog.html",
    "title": "Katalog",
    "section": "",
    "text": "Her finner du en liste over alle funksjoner i Metodebiblioteket.\n\n// Read in data\ntestdata = JSON.parse(my_ojs_data)\n\n\n\n\n\n\n\nviewof lang = Inputs.radio(new Map([[\"R\", \"r\"], [\"python\", \"python\"]]),\n  {label: \"Språk: \", value: \"r\"}\n)\n\n\nviewof tema = Inputs.radio(new Map([[\"ALLE\", \" \"], [\"kontrollere\",\"kontrollere\"],\n[\"imputere\",\"imputere\"],\n[\"strukturere\",\"strukturere\"],\n[\"vektberegning\",\"vektberegning\"],\n[\"indeksberegning\",\"indeksberegning\"],\n[\"usikkerhetsberegning\",\"usikkerhetsberegning\"],\n[\"sesongjustering\",\"sesongjustering\"],\n[\"konfidensialitet\",\"konfidensialitet\"],\n[\"analyse\",\"analyse\"],\n[\"maskinlæring\", \"maskinlaering\"]]),\n  {label: \"Metodeområde: \", value: \" \"} \n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Filter data based on check boxes\n/*\nfiltered = testdata.filter(function(data) {\n  \n  return lang.every(r=&gt; data.keyword.includes(r)) &&\n    tema.every(r=&gt; data.keyword.includes(r))\n    ;\n})\n*/\n\nfiltered = testdata.filter(r =&gt; r.keyword.includes(lang) &&\n    r.keyword.includes(tema));\n\n\n\n\n\n\n\nfunction overflow_large(words) {\n  return (x) =&gt; htl.html`&lt;div style=\"\n    display: inline-block;\n    width: 450px;\n    white-space: pre-line;\n    break-text: auto;\n    overflow-wrap: normal;\n    height: auto;\n    word-wrap: break-word;\n    overflow: auto;\n\"&gt;${x.toLocaleString(\"en\")}`;\n}\n\n// Function for formatting names\nfunction overflow_names(words) {\n  return (x) =&gt; htl.html`&lt;div style=\"\n    display: inline-block;\n    width: 250px;\n    white-space: pre-line;\n    break-text: auto;\n    overflow-wrap: normal;\n    height: auto;\n    word-wrap: break-word;\n    overflow: auto;\n\"&gt;${x.toLocaleString(\"en\")}`;\n}\n\n// Function for adding hyperlinks\nfunction get_url(new_url) {\n  return (x) =&gt; htl.html`&lt;a href=${x.split(\";\")[1]} target=_blank&gt;${x.split(\";\")[0]} &lt;/a&gt;`;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof filter_dt = Inputs.search(filtered)\n\ntable_out = Inputs.table(filter_dt, { columns: [\n    \"func_link\",\n    \"pack_link\",\n    \"navn\",\n    \"description\"\n  ],\n  header: {\n    func_link: \"Funksjon\",\n    pack_link: \"Pakke\",\n    navn: \"Navn\",\n    description: \"Beskrivelse\"\n  },\n  format: {\n  func_link: get_url(\n      filter_dt, \n      (d) =&gt; d[\"func_lnk\"]\n      ),\n  pack_link: get_url(\n      filter_dt,\n      (d) =&gt;d[\"pack_lnk\"]\n      ),\n  navn: overflow_names(\n  filter_dt,\n    (x) =&gt; x[\"navn\"]\n      ),\n  description: overflow_large(\n      filter_dt,\n      (x) =&gt; x[\"description\"]\n      ),\n  },\n  rows: 100\n})"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Metodebiblioteket",
    "section": "",
    "text": "Metodebiblioteket er SSBs bibliotek for statistiske metode funksjoner. Metodene på liste er funksjoner skrevet i R eller python som passer i SSBs IT-platform. Alle funksjoner er testet av Seksjon for Metode for bruk i produksjon av offisielle statistikk. Alle er brukt i minst én produksjonsløp/eller brukt i SSBs interne metodekurs."
  },
  {
    "objectID": "catalogue_conf.html",
    "href": "catalogue_conf.html",
    "title": "Konfidensialitet",
    "section": "",
    "text": "Statistikkloven § 7. Statistisk konfidensialitet ved formidling av offisiell statistikk pålegger at vi ikke publiserer statistikk slik at statistisk informasjon kan føres tilbake til enkeltpersoner eller andre typer statistiske enheter. Hvis dette likevel skjer sier vi at det har funnet sted en avsløring.\nHvis hensynet til oppbyggingen av statistikken krever det, kan det i noen tilfeller gjøres unntak. Slik publisering må ikke være til skade for de statistiske enhetene som inngår i statistikken.\nAt vi i SSB følger dette er avgjørende for oppgavegivernes tillit til oss og for at vi skal kunne utføre vårt samfunnsoppdrag.\n\n// Read in data\ntestdata = JSON.parse(my_ojs_data)\n\n\n\n\n\n\n\nviewof tema = Inputs.radio( [\"undertrykking\", \"avrunding\", \"støylegging\"],\n  {label: \"Metodeområde: \", value: \"undertrykking\"}\n)\n\n\n\n\n\n\n\n// Filter data based on check boxes\nfiltered = testdata.filter(r=&gt; r.keyword.includes(tema));\n\n\n\n\n\n\n\nfunction overflow_large(words) {\n  return (x) =&gt; htl.html`&lt;div style=\"\n    display: inline-block;\n    width: 450px;\n    white-space: pre-line;\n    break-text: auto;\n    overflow-wrap: normal;\n    height: auto;\n    word-wrap: break-word;\n    overflow: auto;\n\"&gt;${x.toLocaleString(\"en\")}`;\n}\n\n// Function for formatting names\nfunction overflow_names(words) {\n  return (x) =&gt; htl.html`&lt;div style=\"\n    display: inline-block;\n    width: 250px;\n    white-space: pre-line;\n    break-text: auto;\n    overflow-wrap: normal;\n    height: auto;\n    word-wrap: break-word;\n    overflow: auto;\n\"&gt;${x.toLocaleString(\"en\")}`;\n}\n\n// Function for adding hyperlinks\nfunction get_url(new_url) {\n  return (x) =&gt; htl.html`&lt;a href=${x.split(\";\")[1]} target=_blank&gt;${x.split(\";\")[0]} &lt;/a&gt;`;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof filter_dt = Inputs.search(filtered)\n\ntable_out = Inputs.table(filter_dt, { columns: [\n    \"func_link\",\n    \"pack\",\n    \"språk\",\n    \"navn\",\n    \"description\"\n  ],\n  header: {\n    func_link: \"Funksjon\",\n    pack_link: \"Pakke\",\n    språk: \"Språk\",\n    navn: \"Navn\",\n    description: \"Beskrivelse\"\n  },\n  format: {\n  func_link: get_url(\n      filter_dt, \n      (d) =&gt; d[\"func_lnk\"]\n      ),\n  pack_link: get_url(\n      filter_dt, \n      (d) =&gt; d[\"pack_lnk\"]\n      ),\n  navn: overflow_names(\n  filter_dt,\n    (x) =&gt; x[\"navn\"]\n      ),\n  description: overflow_large(\n      filter_dt,\n      (x) =&gt; x[\"description\"]\n      ),\n  },\n  rows: 100\n})"
  },
  {
    "objectID": "catalogue_edit.html",
    "href": "catalogue_edit.html",
    "title": "Dataeditering",
    "section": "",
    "text": "Dataeditering er kontroll, granskning og retting av data. Det omfatter editering av populasjon, editering av åpenbare og systematiske feil, seleksjon av verdier med stort avvik og høy innflytelse og kontroll av aggregater som skal bli publisert. Metodene som blir brukt til dataeditering spenner fra logisk kontroll av gyldig verdiområde til maskinlæring. All statistikk som publiseres er basert på data som har blitt kontrollert og i de fleste tilfeller også korrigert.\nDu kan finne mer information om dataediteringsprosess på Byrånettet.\n\n// Read in data\ntestdata = JSON.parse(my_ojs_data)\n\n\n\n\n\n\n\nviewof tema = Inputs.radio([\"kontrollere\", \"imputere\"],\n  {label: \"Metodeområde: \", value: \"kontrollere\"} \n)\n\nviewof metode = Inputs.radio(tema === \"imputere\" ? [\"donor\", \"modellbasert\"] : [\"regelbasert\", \"statistisk\"],\n{label: \"Metode: \", value: \"regelbasert\"}\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfiltered = testdata.filter(r =&gt; r.keyword.includes(metode) && r.keyword.includes(tema))\n\n\n\n\n\n\n\nfunction overflow_large(words) {\n  return (x) =&gt; htl.html`&lt;div style=\"\n    display: inline-block;\n    width: 450px;\n    white-space: pre-line;\n    break-text: auto;\n    overflow-wrap: normal;\n    height: auto;\n    word-wrap: break-word;\n    overflow: auto;\n\"&gt;${x.toLocaleString(\"en\")}`;\n}\n\n// Function for formatting names\nfunction overflow_names(words) {\n  return (x) =&gt; htl.html`&lt;div style=\"\n    display: inline-block;\n    width: 250px;\n    white-space: pre-line;\n    break-text: auto;\n    overflow-wrap: normal;\n    height: auto;\n    word-wrap: break-word;\n    overflow: auto;\n\"&gt;${x.toLocaleString(\"en\")}`;\n}\n\n// Function for adding hyperlinks\nfunction get_url(new_url) {\n  return (x) =&gt; htl.html`&lt;a href=${x.split(\";\")[1]} target=_blank&gt;${x.split(\";\")[0]} &lt;/a&gt;`;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof filter_dt = Inputs.search(filtered)\n\ntable_out = Inputs.table(filter_dt, { columns: [\n    \"func_link\",\n    \"pack_link\",\n    \"språk\",\n    \"navn\",\n    \"description\"\n  ],\n  header: {\n    func_link: \"Funksjon\",\n    pack_link: \"Pakke\",\n    språk: \"Språk\",\n    navn: \"Navn\",\n    description: \"Beskrivelse\"\n  },\n  format: {\n  func_link: get_url(\n      filter_dt, \n      (d) =&gt; d[\"func_lnk\"]\n      ),\n  pack_link: get_url(\n      filter_dt, \n      (d) =&gt; d[\"pack_lnk\"]\n      ),\n  navn: overflow_names(\n  filter_dt,\n    (x) =&gt; x[\"navn\"]\n      ),\n  description: overflow_large(\n      filter_dt,\n      (x) =&gt; x[\"description\"]\n      ),\n  },\n  rows: 100\n})"
  },
  {
    "objectID": "prosess.html",
    "href": "prosess.html",
    "title": "Prosessmodell",
    "section": "",
    "text": "Når vi skal beskrive produksjonsprosessen for offisiell statistikk bruker vi FNs prosessmodell, Generic Statistical Business Process Model (GSBPM). Den beskriver og definerer prosessene som er nødvendige for å produsere offisiell statistikk.\nVi har samlet funksjoner i Metodebiblioteket etter prosessen de vanligvis benyttes i. Dette er kun ment som en hjelpemidle. Det er mulig at funksjonene kan benyttes i andre prosesser enn det som er beskrivet her.\n\n1 Avklare behov2 Planlegge3 Bygge4 Samle inn5 Klargjøre6 Analyse7 Formidle8 Evaluare\n\n\nIngen funksjoner enda.\n\n\nIngen funksjoner enda.\n\n\nIngen funksjoner enda.\n\n\nIngen funksjoner enda.\n\n\nVed klargjøring tenker vi mest ofte for dataediting men det inkludere også data integrering, klassifisering, beregning av vekter og aggregering. Her finner du funksjoner som kan benyttes i klargjørings steget\n\n5.1 Integrere Data5.2 Klassifisere og kode5.3 Kontrollere og validere5.4 Editere og imputere5.5 Avlede nye variabler5.6 Beregne vekter5.7 Beregne aggregater5.8 Ferdigstille datafiler\n\n\nIngen funksjoner enda.\n\n\nIngen funksjoner enda.\n\n\n\n\n\n\n\nFunksjon\nPakke\nNavn\nSpråk\nBeskrivelse\n\n\n\n\nAggrSml2NumVar\nKostra\nAggregated comparison of two numerical variables\nr\nCalculating aggregated values for two numerical variables, useful for comparison of the variables\n\n\nconfront\nvalidate\nConfront data with a (set of) expressionset(s)\nr\nAn expressionset is a general class storing rich expressions (basically expressions and some meta data) which we call 'rules'. Examples of expressionset implementations are 'validator' objects, storing validation rules and 'indicator' objects, storing data quality indicators. The 'confront' function evaluates the expressions one by one on a dataset while recording some process meta data. All results are stored in a (subclass of a) 'confrontation' object.\n\n\nDiff2NumVar\nKostra\nDifference between two numerical variables\nr\nCalculating the difference between two numerical variables Listing units with big difference, either the k units with the biggest absolute difference, or units with a absolute difference greater than a threshold Only units with value on both variables are used in the calculations\n\n\nget_extremes\nstruktuR\nGet extreme values Get extreme values in the sample dataset\nr\nGet extreme values Get extreme values in the sample dataset\n\n\nHb\nKostra\nDetection of outliers using the Hidiroglou-Berthelot (HB) method\nr\nDetects possible outliers of a variable in period t by comparing it with revised values from period t-1\n\n\nLmImpute\nKostra\nINTERNAL FUNCTION: Regeression imputation.\nr\nImputation by weighted regeression, using lm, allowing multiple explanatory variables and multiple response variables. Impute missing and wrong values (category 3) by the model based on representative data (category 1). Some data are considered correct but not representative (category 2).\n\n\nOutlierRegressionMicro\nKostra\nFinding outliers of a sigle variable (y) by a regression model\nr\noutliers are found by using a limit for studentized residuals.\n\n\nQuartile\nKostra\nDetection of outliers using quartiles and by comparing with other\nr\nDetection of outliers using quartiles and by comparing with other data in same or previous period.\n\n\nRank2NumVar\nKostra\nComparing the biggest units with respect to two numerical\nr\nCalculating rank and share for two numerical variables, and the ratio between the variables Listing big units, either the k biggest units or units with value greater than a threshold\n\n\nThError\nKostra\nDetection of 1000-error\nr\nDetects units with possible 1000-error by comparing values in period t with revised values from period t-1\n\n\nvalidator\nvalidate\nDefine validation rules for data\nr\nDefine validation rules for data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFunksjon\nPakke\nNavn\nSpråk\nBeskrivelse\n\n\n\n\nimpute_knn\nsimputation\nHot deck imputation\nr\nHot-deck imputation methods include random and sequential hot deck, k-nearest neighbours imputation and predictive mean matching.\n\n\nimpute_pmm\nsimputation\nHot deck imputation\nr\nHot-deck imputation methods include random and sequential hot deck, k-nearest neighbours imputation and predictive mean matching.\n\n\nimpute_proxy\nsimputation\nImpute by variable derivation\nr\nImpute missing values by a constant, by copying another variable computing transformations from other variables.\n\n\nimpute_rhd\nsimputation\nHot deck imputation\nr\nHot-deck imputation methods include random and sequential hot deck, k-nearest neighbours imputation and predictive mean matching.\n\n\nlm\nstats\nFitting Linear Models\nr\n'lm' is used to fit linear models, including multivariate ones. It can be used to carry out regression, single stratum analysis of variance and analysis of covariance (although 'aov' may provide a more convenient interface for these).\n\n\nLmImpute\nKostra\nINTERNAL FUNCTION: Regeression imputation.\nr\nImputation by weighted regeression, using lm, allowing multiple explanatory variables and multiple response variables. Impute missing and wrong values (category 3) by the model based on representative data (category 1). Some data are considered correct but not representative (category 2).\n\n\nmodifier\ndcmodify\nCreate or read a set of data modification rules\nr\nCreate or read a set of data modification rules\n\n\nOLS\nstatsmodels.regression.linear_model\nOrdinary Least Squares\nr\nConvert a collection of text documents to a matrix of token counts.\n\n\nOLS\nstatsmodels.regression.linear_model\nOrdinary Least Squares\nr\nConvert a collection of text documents to a matrix of token counts.\n\n\nSVC\nsklearn.svm\nC-Support Vector Classification.\nr\nThe implementation is based on libsvm. The fit time scales at least quadratically with the number of samples and may be impractical beyond tens of thousands of samples.\n\n\nSVC\nsklearn.svm\nC-Support Vector Classification.\nr\nThe implementation is based on libsvm. The fit time scales at least quadratically with the number of samples and may be impractical beyond tens of thousands of samples.\n\n\n\n\n\n\n\n\n\nIngen funksjoner enda\n\n\n\n\n\n\n\nFunksjon\nPakke\nNavn\nSpråk\nBeskrivelse\n\n\n\n\nCalibrateSSB\nCalibrateSSB\nCalibration weighting and estimation\nr\nCompute weights by calibration and corresponding estimates, totals and residuals\n\n\nOLS\nstatsmodels.regression.linear_model\nOrdinary Least Squares\nr\nConvert a collection of text documents to a matrix of token counts.\n\n\nPanelEstimation\nCalibrateSSB\nVariance estimation for panel data\nr\nVariance estimation of linear combinations of totals and ratios based on output from wideFromCalibrate\n\n\nquantile_weighted\nSSBtools\nWeighted quantiles\nr\nThe default method ('type=2') corresponds to weighted percentiles in SAS.\n\n\nstruktur_model\nstruktuR\nRun a struktur model\nr\nEstimates total and uncertainty for a rate, homogeneous or regression model within strata.\n\n\n\n\n\n\n\n\n\nIngen funksjoner enda\n\n\nIngen funksjoner enda\n\n\n\n\n\n\n6.1 Utarbeid produktutkast6.2 Kvalitetssikre produkter6.3 Tolke og forklarer produkter6.4 Gjennomføre avslørings kontroll6.5 Ferdigstille produkter\n\n\nIngen funksjoner enda.\n\n\n\n\n\n\n\nFunksjon\nPakke\nNavn\nSpråk\nBeskrivelse\n\n\n\n\nmodel_aggregate\nSSBtools\nHierarchical aggregation via model specification\nr\nInternally a dummy/model matrix is created according to the model specification. This model matrix is used in the aggregation process via matrix multiplication and/or the function 'aggregate_multiple_fun'.\n\n\n\n\n\n\n\n\n\nIngen funksjoner enda.\n\n\n\n\n\n\n\nFunksjon\nPakke\nNavn\nSpråk\nBeskrivelse\n\n\n\n\nGaussSuppressDec\nGaussSuppression\nCell suppression with synthetic decimal numbers\nr\n'GaussSuppressionFromData' is run and decimal numbers are added to output by a modified (for sparse matrix efficiency) version of 'SuppressDec'.\n\n\nGaussSuppressionFromData\nGaussSuppression\nCell suppression from input data containing inner cells\nr\nAggregates are generated followed by primary suppression followed by secondary suppression by Gaussian elimination by 'GaussSuppression'\n\n\nPLSroundingPublish\nSmallCountRounding\nPLS inspired rounding\nr\nSmall count rounding of necessary inner cells are performed so that all small frequencies of cross-classifications to be published (publishable cells) are rounded. The publishable cells can be defined from a model formula, hierarchies or automatically from data.\n\n\nProtectKostra\nKostra\nTable suppression according to a frequency rule following the\nr\nTable suppression according to a frequency rule following the standards in the Kostra project.\n\n\nProtectTableData\neasySdcTable\nEasy interface to sdcTable: Table suppression according to a\nr\n'GaussSuppression', 'protectTable' or 'protect_linked_tables' is run with a data set as the only required input. One (stacked) or several (unstacked) input variables can hold cell counts. 'ProtectTableData' is a tidy wrapper function, which returns a single data frame instead of a list ('info' omitted).\n\n\nSdcForetakPerson\nSdcForetakPerson\nPrikking av foretak og avrunding eller prikking av personer\nr\nPrikking av foretak og avrunding eller prikking av personer. Sett parameteren 'allowTotal' til 'TRUE' for at kategorier innen ('within') foretak skal prikkes samtidig som totalverdier over disse grupperingene tillates publisert.\n\n\nSuppressDominantCells\nGaussSuppression\nSuppress volume tables using dominant cell primary suppression.\nr\nSuppress volume tables using dominant cell primary suppression.\n\n\nSuppressFewContributors\nGaussSuppression\nFew contributors suppression\nr\nThis function provides functionality for suppressing volume tables based on the few contributors rule ('NContributorsRule').\n\n\nSuppressionFromDecimals\nGaussSuppression\nCell suppression from synthetic decimal numbers\nr\nDecimal numbers, as calculated by 'GaussSuppressDec', are used to decide suppression (whole numbers or not). Technically, the calculations are done via 'GaussSuppressionFromData', but without running 'GaussSuppression'. All suppressed cells are primary suppressed.\n\n\nSuppressKDisclosure\nGaussSuppression\nK-disclosure suppression\nr\nA function for suppressing frequency tables using the k-disclosure method.\n\n\nSuppressSmallCounts\nGaussSuppression\nSmall count frequency table suppression.\nr\nThis is a wrapper function of 'GaussSuppressionFromData' for small count frequency suppression. For common applications, the 'spec' parameter can be adjusted, see 'PackageSpecs' for more information. See Details for more information on function call customization.\n\n\n\n\n\n\n\n\n\nIngen funksjoner enda.\n\n\n\n\n\nIngen funksjoner enda\n\n\nIngen funksjoner enda"
  }
]